cortex:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx-public
    hosts:
      - host: cortex.local.naim.run
        paths:
          - /
  
  
  useConfigMap: true
  
  
  config:
    auth_enabled: true # Enable cortex multi-tenancy
    
    ingester:
      lifecycler:
        ring:
          replication_factor: 3
          kvstore:
            store: consul
            consul:
              host: consul-server.consul.svc:8500
    
    # https://github.com/cortexproject/cortex/blob/master/docs/configuration/config-file-reference.md#limits_config
    limits:
      reject_old_samples_max_age: 12h
      max_series_per_metric: 200000
      ingestion_rate: 50000
      compactor_blocks_retention_period: 168h # 7days # Delete blocks containing samples older than the specified retention period. 0 to disable.
    
    storage:
      engine: blocks
    
    # https://cortexmetrics.io/docs/configuration/configuration-file/#blocks_storage_config
    blocks_storage:
      # Backend storage to use. Supported backends are: s3, gcs, azure, swift and filesystem [local filesystem storage directory]
      backend: s3
      s3:
        bucket_name: cortex-metrics
#        region: eu-central-1
        endpoint: s3.local.naim.run
        insecure: true
        access_key_id: 0Bg7dWxVK8FKh3f8
        secret_access_key: zEnIWIJ2ezQUnirZA4v34pMUV3OkTHSU
      # Local directory to store TSDBs in the ingesters.
      tsdb:
        dir: /data/tsdb
        # TSDB blocks retention in the ingester before a block is removed. This should
        # be larger than the block_ranges_period and large enough to give
        # store-gateways and queriers enough time to discover newly uploaded blocks.
        retention_period: 6h
      bucket_store:
        sync_dir: /data/tsdb-sync
        bucket_index:
          enabled: true
    
    # https://github.com/cortexproject/cortex/blob/master/docs/configuration/config-file-reference.md#distributor_config
    distributor:
      ha_tracker:
        enable_ha_tracker: true
        kvstore:
          store: consul
          consul:
            host: consul-server.consul.svc:8500
    
    # https://github.com/cortexproject/cortex/blob/master/docs/configuration/config-file-reference.md#querier_config
    querier:
      # https://cortexmetrics.io/docs/blocks-storage/production-tips/
      query_ingesters_within: 12h5m
      query_store_after: 12h
    
    # -- Method to use for backend rule storage (configdb, azure, gcs, s3, swift, local) refer to https://cortexmetrics.io/docs/configuration/configuration-file/#ruler_config
    ruler:
      storage:
        type: s3
        s3:
          bucketnames: cortex-alerts
#          region: eu-central-1
          endpoint: s3.local.naim.run
          insecure: true
          access_key_id: 0Bg7dWxVK8FKh3f8
          secret_access_key: zEnIWIJ2ezQUnirZA4v34pMUV3OkTHSU
    
    # -- Type of backend to use to store alertmanager configs. Supported values are: "configdb", "gcs", "s3", "local". refer to: https://cortexmetrics.io/docs/configuration/configuration-file/#alertmanager_config
    alertmanager:
      enable_api: true
      storage:
        type: s3
        s3:
          bucketnames: cortex-alerts
#          region: eu-central-1
          endpoint: s3.local.naim.run
          insecure: true
          access_key_id: 0Bg7dWxVK8FKh3f8
          secret_access_key: zEnIWIJ2ezQUnirZA4v34pMUV3OkTHSU
  
  
  alertmanager:
    enabled: true
    
    statefulSet:
      enabled: true
    
    persistentVolume:
      enabled: true
      size: 1Gi # 2Gi
    
    containerSecurityContext:
      enabled: true
      readOnlyRootFilesystem: false # allow to load/validate alertmanager rules: https://github.com/cortexproject/cortex/issues/4089
  
  
  ingester:
    statefulSet:
      enabled: true
    
    autoscaling:
      enabled: true
      minReplicas: 3
      maxReplicas: 5
      targetMemoryUtilizationPercentage: 75
    
    persistentVolume:
      # https://cortexmetrics.io/docs/blocks-storage/production-tips/
      size: 2Gi # 20Gi
  
  
  ruler:
    enabled: true
  
  
  nginx:
    config:
      # -- ref: http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
      client_max_body_size: 5M
#      setHeaders:
#        X-Scope-OrgID: demo
      auth_orgs:
        - org1
        - org2
        - org3
  
  store_gateway:
    persistentVolume:
      enabled: true
      size: 2Gi # 10Gi
  
  
  compactor:
    persistentVolume:
      enabled: true
      size: 5Gi # 25Gi

  
  memcached-frontend:
    enabled: true