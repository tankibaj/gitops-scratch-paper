apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: drug-info
spec:
  entrypoint: main
  # We use a volume claim template so that we can have a shared workspace.
  volumeClaimTemplates:
    - metadata:
        name: workspace
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Mi
  templates:
    - name: main
      dag:
        tasks:
          - name: clone
            template: clone
            arguments:
              parameters:
                - name: repo_url
                  value: "{{workflow.parameters.repo_url}}"
                - name: branch
                  value: "{{workflow.parameters.branch}}"
                - name: work_dir
                  value: "{{workflow.parameters.work_dir}}"
          - name: debug-info
            template: debug-info
            arguments:
              parameters:
                - name: work_dir
                  value: "{{workflow.parameters.work_dir}}"
            depends: "clone"

    # -- Git Checkout --
    - name: clone
      inputs:
        parameters:
          - name: repo_url
          - name: branch
          - name: work_dir
      container:
        volumeMounts:
          - mountPath: "{{inputs.parameters.work_dir}}"
            name: workspace
        image: alpine/git:v2.43.0
        workingDir: "{{inputs.parameters.work_dir}}"
        command: [ sh, -c ]
        args:
          - |
            branch_name=$(echo '{{inputs.parameters.branch}}' | awk -F'/' '{print $3}')
            git clone --branch $branch_name '{{inputs.parameters.repo_url}}' .

    # -- Debug --
    - name: debug-info
      inputs:
        parameters:
          - name: work_dir
      container:
        volumeMounts:
          - mountPath: "{{workflow.parameters.work_dir}}"
            name: workspace
        workingDir: "{{workflow.parameters.work_dir}}"
        image: alpine:latest
        env:
          - name: GIT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: git-credentials
                key: token
        command: [ sh, -c ]
        args:
          - |
            id
            echo "Listing /work directory:"
            ls -lah "{{workflow.parameters.work_dir}}"