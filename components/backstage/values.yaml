backstage:
#  image:
#    registry: ghcr.io
#    repository: janus-idp/redhat-backstage-build
#    tag: latest
  extraEnvVars:
    - name: 'APP_CONFIG_app_baseUrl'
      value: 'https://{{ .Values.ingress.host }}'
    - name: 'APP_CONFIG_backend_baseUrl'
      value: 'https://{{ .Values.ingress.host }}'
    - name: 'APP_CONFIG_backend_cors_origin'
      value: 'https://{{ .Values.ingress.host }}'
#    - name: 'APP_CONFIG_backend_database_client'
#      value: pg
#    - name: 'APP_CONFIG_backend_database_connection_host'
#      value: '{{ include "backstage.postgresql.host" . }}'
#    - name: 'APP_CONFIG_backend_database_connection_port'
#      value: '5432'
#    - name: 'APP_CONFIG_backend_database_connection_user'
#      value: '{{ .Values.postgresql.auth.username }}'
#`    - name: 'APP_CONFIG_backend_database_connection_password'
#      valueFrom:
#        secretKeyRef:
#          key: postgres-password
#          name: '{{ include "backstage.postgresql.fullname" . }}'`
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          key: postgres-password
          name: '{{ include "backstage.postgresql.fullname" . }}'

  appConfig:
    app:
      # Let's test that everything is fine with comments
      title: The very best Backstage Helm Chart! :D
      baseUrl: https://somedomain.tl
    backend:
      baseUrl: https://somedomain.tl
      listen:
        port: 12345
      database:
        client: pg
        connection:
          host: '{{ include "backstage.postgresql.host" . }}'
          port: 5432
          user: '{{ .Values.postgresql.auth.username }}'
          password: '{{ .Values.postgresql.auth.password }}'

ingress:
  enabled: true
  className: public
  host: "backstage.local.naim.run"

postgresql:
  enabled: true
  database: backstage
#  postgresqlDataDir: /var/lib/pgsql/data/userdata
  auth:
    username: postgres
    password: "postgres"