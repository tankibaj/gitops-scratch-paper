fullnameOverride: argo-workflows

## Custom resource configuration
crds:
  # -- Install and upgrade CRDs
  install: true
  # -- Keep CRDs on chart uninstall
  keep: false

controller:
  # -- Specify all namespaces where this workflow controller instance will manage
  # workflows. This controls where the service account and RBAC resources will
  # be created. Only valid when singleNamespace is false.
  workflowNamespaces:
    - argo

server:
  # -- Extra arguments to provide to the Argo server binary, such as for disabling authentication.
  # -- Fix: SSO Issue --> https://github.com/argoproj/argo-workflows/issues/6634#issuecomment-1118012324
  extraArgs:
    - --auth-mode=sso
    - --auth-mode=server
  # -- Ingress configuration.
  ingress:
    enabled: true
    ingressClassName: public
    hosts:
      - workflows.local.naim.run
  # -- SSO configuration when SSO is specified as a server auth mode. SSO is activated by adding --auth-mode=sso
  sso:
    enabled: true
    # The root URL of the OIDC identity provider.
    issuer: https://sso.local.naim.run/auth/realms/internal
    # Name of a secret and a key in it to retrieve the app OIDC client ID from.
    #    kubectl -n argo create secret generic argo-server-sso \
    #    --from-literal=client-id=argo-workflows \
    #    --from-literal=client-secret=xxxxxxxxxx
    clientId:
      name: argo-server-sso
      key: client-id
    # Name of a secret and a key in it to retrieve the app OIDC client secret from.
    clientSecret:
      name: argo-server-sso
      key: client-secret
    # The OIDC redirect URL. Should be in the form <argo-root-url>/oauth2/callback.
    # -- Fix: SSO Issue --> https://github.com/argoproj/argo-workflows/issues/6634#issuecomment-1118012324
    redirectUrl: https://workflows.local.naim.run/oauth2/callback/
    rbac:
      enabled: true
    scopes:
      - openid
      - profile
      - email
      - groups
    insecureSkipVerify: true
