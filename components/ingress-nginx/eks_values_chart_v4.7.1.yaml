ingress-nginx:
  fullnameOverride: nginx
  controller:
    config:
      use-forwarded-headers: "true"
      use-http2: "true"
      use-proxy-protocol: "true"

    ingressClassResource:
      name: nginx-public                # -- Name of the ingressClass
      default: false                    # -- Is this the default ingressClass for the cluster
      ingressClass: nginx-public        # -- For backwards compatibility with ingress.class annotation, use ingressClass. Algorithm is as follows, first ingressClassName is considered, if not present, controller looks for ingress.class annotation.
    
    replicaCount: 3
    
    autoscaling:
      enabled: true
      minReplicas: 3
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 0

    service:
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-name: nginx-ingress
        service.beta.kubernetes.io/aws-load-balancer-type: external
        service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
        service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
        service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: /healthz
        service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: 10254
        service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: http
        service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
        service.beta.kubernetes.io/aws-load-balancer-attributes: load_balancing.cross_zone.enabled=true
        # -- Proxy protocol
        service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
        service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: "proxy_protocol_v2.enabled=true, preserve_client_ip.enabled=true"
        # -- Ensure the NLB idle timeout is less than nginx keep-alive timeout. By default,
        # -- NGINX keep-alive is set to 75s. If using WebSockets, the value will need to be
        # -- increased to '3600' to avoid any potential issues.
        service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
        # -- TLS Certificates
        service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:eu-central-1:XXXXXXXXXXX:certificate/e90c7b56ae-bfa6-7690-sda9-2a40db3e3e
        service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: ELBSecurityPolicy-TLS13-1-2-2021-06
        # -- Elastic IP Addresses
        service.beta.kubernetes.io/aws-load-balancer-eip-allocations: eipalloc-5fb4844084,eipalloc-0d539c9c7795c,eipalloc-0e5fb465ccdb
      targetPorts:
#        http: http
        https: 80

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          release: kube-prometheus

  defaultBackend:
    enabled: true